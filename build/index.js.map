{"version":3,"sources":["../src/index.js"],"names":["express","require","app","path","bodyParser","session","connectRedis","RedisStore","mongoose","dbUrl","database","url","connect","useMongoClient","Promise","global","users","auth","polls","db","connection","on","console","error","bind","once","use","json","req","res","status","errors","listen","log"],"mappings":"AAAA,MAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,MAAMC,MAAMF,SAAZ;AACA,MAAMG,OAAOF,QAAQ,MAAR,CAAb;AACA,MAAMG,aAAaH,QAAQ,aAAR,CAAnB;;AAEA,MAAMI,UAAUJ,QAAQ,iBAAR,CAAhB;AAAA,MACMK,eAAeL,QAAQ,eAAR,CADrB;;AAGA,MAAMM,aAAaD,aAAaD,OAAb,CAAnB;;AAGA,MAAMG,WAAWP,QAAQ,UAAR,CAAjB;AACA,MAAMQ,QAAQR,QAAQ,UAAR,EAAoBS,QAApB,CAA6BC,GAA3C;AACAH,SAASI,OAAT,CAAiBH,KAAjB,EAAuB,EAACI,gBAAe,IAAhB,EAAvB;;AAEAL,SAASM,OAAT,GAAmBC,OAAOD,OAA1B;;AAEA,OAAOE,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,KAAKX,SAASY,UAApB;;AAGAD,GAAGE,EAAH,CAAM,OAAN,EAAeC,QAAQC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,mBAA5B,CAAf;AACAH,GAAGM,IAAH,CAAQ,MAAR,EAAgB,MAAM;AACnB;;AAECvB,MAAIwB,GAAJ,CAAQtB,WAAWuB,IAAX,EAAR;;AAED;;;;;;;;;;AAUCzB,MAAIwB,GAAJ,CAAQ,YAAR,EAAqBV,KAArB;AACAd,MAAIwB,GAAJ,CAAQ,WAAR,EAAoBT,IAApB;AACAf,MAAIwB,GAAJ,CAAQ,YAAR,EAAqBR,KAArB;;AAGAhB,MAAIwB,GAAJ,CAAQ,CAACE,GAAD,EAAMC,GAAN,KAAa;AACjBA,QAAIC,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACnBI,cAAO;AACLhB,gBAAO;AADF;AADY,KAArB;AAKH,GAND;;AASJb,MAAI8B,MAAJ,CAAW,IAAX,EAAiB,MAAMV,QAAQW,GAAR,CAAY,8BAAZ,CAAvB;AAEC,CA/BD;;AAiCA","file":"index.js","sourcesContent":["const express = require('express');\nconst app = express();\nconst path = require('path');\nconst bodyParser = require('body-parser');\n\nconst session = require('express-session'),\n      connectRedis = require('connect-redis');\n\nconst RedisStore = connectRedis(session);\n\n\nconst mongoose = require('mongoose');\nconst dbUrl = require('./config').database.url;\nmongoose.connect(dbUrl,{useMongoClient:true});\n\nmongoose.Promise = global.Promise;\n\nimport users from './routes/users';\nimport auth from './routes/auth';\nimport polls from './routes/polls';\n\nconst db = mongoose.connection;\n\n\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', () => {\n   // User.find().remove(function(){console.log(\"removed\")});\n    \n    app.use(bodyParser.json());\n    \n   /* app.use(session({ store: new RedisStore({\n                        url: process.env.REDIS_URL,\n                        secure: process.env.NODE_ENV=='production'\n                      }),\n                      resave: false,\n                      saveUninitialized: false,\n                      name: 'xxx.connect.sid', \n                      secret: require('./config').SESSION_SECRET\n                    }));\n    */                \n    app.use('/api/users',users);\n    app.use('/api/auth',auth);\n    app.use('/api/polls',polls);\n    \n \n    app.use((req, res) =>{\n        res.status(404).json({\n          errors:{\n            global:'Still working on it. Please try again later.'\n          }\n        })\n    });\n  \n\napp.listen(8081, () => console.log(\"app listening at cloud9 8081\") );\n\n});\n\n/*\n    \"start\": \"nodemon --watch src --exec babel-node -- src/index.js\"\n*/"]}